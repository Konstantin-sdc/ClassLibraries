//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Foundations.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Foundations.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Недопустимый аргумент в.
        /// </summary>
        public static string ArgumentExceptionMessage {
            get {
                return ResourceManager.GetString("ArgumentExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Представляет базовый набор данных для всех производных классов..
        /// </summary>
        public static string BasicComplexDesc {
            get {
                return ResourceManager.GetString("BasicComplexDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Базовый набор данных.
        /// </summary>
        public static string BasicComplexName {
            get {
                return ResourceManager.GetString("BasicComplexName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Общие данные.
        /// </summary>
        public static string BasicDataGroup {
            get {
                return ResourceManager.GetString("BasicDataGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возвращает копию экземпляра.
        /// </summary>
        public static string CloneName {
            get {
                return ResourceManager.GetString("CloneName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сравнить для порядка сортировки.
        /// </summary>
        public static string CompareForSort {
            get {
                return ResourceManager.GetString("CompareForSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект..
        /// </summary>
        public static string CompareToObjectDesc {
            get {
                return ResourceManager.GetString("CompareToObjectDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сравнивает текущий экземпляр с другим и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой экземпляр..
        /// </summary>
        public static string CompareToOtherDesc {
            get {
                return ResourceManager.GetString("CompareToOtherDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Координаты точки или объекта в пространстве. Пространство необязательно трёхмерно..
        /// </summary>
        public static string CoordsDesc {
            get {
                return ResourceManager.GetString("CoordsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Координаты.
        /// </summary>
        public static string CoordsName {
            get {
                return ResourceManager.GetString("CoordsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сравнение данных.
        /// </summary>
        public static string DataComparisonGroup {
            get {
                return ResourceManager.GetString("DataComparisonGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Описание сущности. Короткое и ясное, — о том, что эта сущность из себя представляет..
        /// </summary>
        public static string DescriptionDesc {
            get {
                return ResourceManager.GetString("DescriptionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Описание.
        /// </summary>
        public static string DescriptionName {
            get {
                return ResourceManager.GetString("DescriptionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возвращает результат проверки эквивалентности текущего экземпляра с другим объектом..
        /// </summary>
        public static string EqualsObjectDesc {
            get {
                return ResourceManager.GetString("EqualsObjectDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверить эквивалентность с другим объектом.
        /// </summary>
        public static string EqualsObjectName {
            get {
                return ResourceManager.GetString("EqualsObjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возвращает результат проверки эквивалентности текущего экземпляра с другим экземпляром. .
        /// </summary>
        public static string EqualsOtherDesc {
            get {
                return ResourceManager.GetString("EqualsOtherDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверить эквивалентность с другим экземпляром.
        /// </summary>
        public static string EqualsOtherName {
            get {
                return ResourceManager.GetString("EqualsOtherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Эквивалентны ли два указанных объекта.
        /// </summary>
        public static string EqualsTwoName {
            get {
                return ResourceManager.GetString("EqualsTwoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определяется только своими координатами..
        /// </summary>
        public static string GeometricPointDesc {
            get {
                return ResourceManager.GetString("GeometricPointDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Геометрическая точка.
        /// </summary>
        public static string GeometricPointName {
            get {
                return ResourceManager.GetString("GeometricPointName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Хэш-код текущего экземпляра.
        /// </summary>
        public static string HashCodeCurrent {
            get {
                return ResourceManager.GetString("HashCodeCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Хэш-код указанного объекта.
        /// </summary>
        public static string HashCodeTarget {
            get {
                return ResourceManager.GetString("HashCodeTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Строка состоит только из разделителей или является пустой..
        /// </summary>
        public static string InvalidStringDescripttion {
            get {
                return ResourceManager.GetString("InvalidStringDescripttion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка создать величину, не предусмотренную в заданной Системе Единиц..
        /// </summary>
        public static string InvalidValueInitialise {
            get {
                return ResourceManager.GetString("InvalidValueInitialise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Измеряемые параметры.
        /// </summary>
        public static string MeasuredParameters {
            get {
                return ResourceManager.GetString("MeasuredParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возвращает результат проверки на равенство по значениям..
        /// </summary>
        public static string ParityDesc {
            get {
                return ResourceManager.GetString("ParityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверить на равенство.
        /// </summary>
        public static string ParityName {
            get {
                return ResourceManager.GetString("ParityName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Правило проверки строк на эквивалентность по умолчанию.
        /// </summary>
        public static string StringComparisonDefault {
            get {
                return ResourceManager.GetString("StringComparisonDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Правило проверки строк на эквивалентность с установленным правилом проверки..
        /// </summary>
        public static string StringComparisonDesc {
            get {
                return ResourceManager.GetString("StringComparisonDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Правило проверки строк на эквивалентность.
        /// </summary>
        public static string StringComparisonName {
            get {
                return ResourceManager.GetString("StringComparisonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Наименование сущности. Достаточно понятное, чтобы отличить её от других. Достаточно короткое, чтобы быть наименованием..
        /// </summary>
        public static string TitleDesc {
            get {
                return ResourceManager.GetString("TitleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Наименование.
        /// </summary>
        public static string TitleName {
            get {
                return ResourceManager.GetString("TitleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возвращает результат проверки на неравенство по значениям..
        /// </summary>
        public static string UnParityDesc {
            get {
                return ResourceManager.GetString("UnParityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверить на неравенство.
        /// </summary>
        public static string UnParityName {
            get {
                return ResourceManager.GetString("UnParityName", resourceCulture);
            }
        }
    }
}
